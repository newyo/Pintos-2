TOTAL TESTING SCORE: 93.6%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY BY TEST SET

Test Set                                      Pts Max  % Ttl  % Max
--------------------------------------------- --- --- ------ ------
tests/vm/Rubric.functionality                  48/ 55  43.6%/ 50.0%
tests/vm/Rubric.robustness                     28/ 28  15.0%/ 15.0%
tests/userprog/Rubric.functionality           108/108  10.0%/ 10.0%
tests/userprog/Rubric.robustness               88/ 88   5.0%/  5.0%
tests/filesys/base/Rubric                      30/ 30  20.0%/ 20.0%
--------------------------------------------- --- --- ------ ------
Total                                                  93.6%/100.0%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY OF INDIVIDUAL TESTS

Functionality of virtual memory subsystem (tests/vm/Rubric.functionality):
	- Test stack growth.
	     3/ 3 tests/vm/pt-grow-stack
	     3/ 3 tests/vm/pt-grow-stk-sc
	     3/ 3 tests/vm/pt-big-stk-obj
	     3/ 3 tests/vm/pt-grow-pusha

	- Test paging behavior.
	     3/ 3 tests/vm/page-linear
	     3/ 3 tests/vm/page-parallel
	     3/ 3 tests/vm/page-shuffle
	     4/ 4 tests/vm/page-merge-seq
	     4/ 4 tests/vm/page-merge-par
	  ** 0/ 4 tests/vm/page-merge-mm
	     4/ 4 tests/vm/page-merge-stk

	- Test "mmap" system call.
	     2/ 2 tests/vm/mmap-read
	  ** 0/ 2 tests/vm/mmap-write
	     2/ 2 tests/vm/mmap-shuffle

	     2/ 2 tests/vm/mmap-twice

	     2/ 2 tests/vm/mmap-unmap
	  ** 0/ 1 tests/vm/mmap-exit

	     3/ 3 tests/vm/mmap-clean

	     2/ 2 tests/vm/mmap-close
	     2/ 2 tests/vm/mmap-remove

	- Section summary.
	     17/ 20 tests passed
	     48/ 55 points subtotal

Robustness of virtual memory subsystem (tests/vm/Rubric.robustness):
	- Test robustness of page table support.
	     2/ 2 tests/vm/pt-bad-addr
	     3/ 3 tests/vm/pt-bad-read
	     2/ 2 tests/vm/pt-write-code
	     3/ 3 tests/vm/pt-write-code2
	     4/ 4 tests/vm/pt-grow-bad

	- Test robustness of "mmap" system call.
	     1/ 1 tests/vm/mmap-bad-fd
	     1/ 1 tests/vm/mmap-inherit
	     1/ 1 tests/vm/mmap-null
	     1/ 1 tests/vm/mmap-zero

	     2/ 2 tests/vm/mmap-misalign

	     2/ 2 tests/vm/mmap-over-code
	     2/ 2 tests/vm/mmap-over-data
	     2/ 2 tests/vm/mmap-over-stk
	     2/ 2 tests/vm/mmap-overlap


	- Section summary.
	     14/ 14 tests passed
	     28/ 28 points subtotal

Functionality of system calls (tests/userprog/Rubric.functionality):
	- Test argument passing on Pintos command line.
	     3/ 3 tests/userprog/args-none
	     3/ 3 tests/userprog/args-single
	     3/ 3 tests/userprog/args-multiple
	     3/ 3 tests/userprog/args-many
	     3/ 3 tests/userprog/args-dbl-space

	- Test "create" system call.
	     3/ 3 tests/userprog/create-empty
	     3/ 3 tests/userprog/create-long
	     3/ 3 tests/userprog/create-normal
	     3/ 3 tests/userprog/create-exists

	- Test "open" system call.
	     3/ 3 tests/userprog/open-missing
	     3/ 3 tests/userprog/open-normal
	     3/ 3 tests/userprog/open-twice

	- Test "read" system call.
	     3/ 3 tests/userprog/read-normal
	     3/ 3 tests/userprog/read-zero

	- Test "write" system call.
	     3/ 3 tests/userprog/write-normal
	     3/ 3 tests/userprog/write-zero

	- Test "close" system call.
	     3/ 3 tests/userprog/close-normal

	- Test "exec" system call.
	     5/ 5 tests/userprog/exec-once
	     5/ 5 tests/userprog/exec-multiple
	     5/ 5 tests/userprog/exec-arg

	- Test "wait" system call.
	     5/ 5 tests/userprog/wait-simple
	     5/ 5 tests/userprog/wait-twice

	- Test "exit" system call.
	     5/ 5 tests/userprog/exit

	- Test "halt" system call.
	     3/ 3 tests/userprog/halt

	- Test recursive execution of user programs.
	    15/15 tests/userprog/multi-recurse

	- Test read-only executable feature.
	     3/ 3 tests/userprog/rox-simple
	     3/ 3 tests/userprog/rox-child
	     3/ 3 tests/userprog/rox-multichild

	- Section summary.
	     28/ 28 tests passed
	    108/108 points subtotal

Robustness of system calls (tests/userprog/Rubric.robustness):
	- Test robustness of file descriptor handling.
	     2/ 2 tests/userprog/close-stdin
	     2/ 2 tests/userprog/close-stdout
	     2/ 2 tests/userprog/close-bad-fd
	     2/ 2 tests/userprog/close-twice
	     2/ 2 tests/userprog/read-bad-fd
	     2/ 2 tests/userprog/read-stdout
	     2/ 2 tests/userprog/write-bad-fd
	     2/ 2 tests/userprog/write-stdin
	     2/ 2 tests/userprog/multi-child-fd

	- Test robustness of pointer handling.
	     3/ 3 tests/userprog/create-bad-ptr
	     3/ 3 tests/userprog/exec-bad-ptr
	     3/ 3 tests/userprog/open-bad-ptr
	     3/ 3 tests/userprog/read-bad-ptr
	     3/ 3 tests/userprog/write-bad-ptr

	- Test robustness of buffer copying across page boundaries.
	     3/ 3 tests/userprog/create-bound
	     3/ 3 tests/userprog/open-boundary
	     3/ 3 tests/userprog/read-boundary
	     3/ 3 tests/userprog/write-boundary

	- Test handling of null pointer and empty strings.
	     2/ 2 tests/userprog/create-null
	     2/ 2 tests/userprog/open-null
	     2/ 2 tests/userprog/open-empty

	- Test robustness of system call implementation.
	     3/ 3 tests/userprog/sc-bad-arg
	     3/ 3 tests/userprog/sc-bad-sp
	     5/ 5 tests/userprog/sc-boundary
	     5/ 5 tests/userprog/sc-boundary-2

	- Test robustness of "exec" and "wait" system calls.
	     5/ 5 tests/userprog/exec-missing
	     5/ 5 tests/userprog/wait-bad-pid
	     5/ 5 tests/userprog/wait-killed

	- Test robustness of exception handling.
	     1/ 1 tests/userprog/bad-read
	     1/ 1 tests/userprog/bad-write
	     1/ 1 tests/userprog/bad-jump
	     1/ 1 tests/userprog/bad-read2
	     1/ 1 tests/userprog/bad-write2
	     1/ 1 tests/userprog/bad-jump2

	- Section summary.
	     34/ 34 tests passed
	     88/ 88 points subtotal

Functionality of base file system (tests/filesys/base/Rubric):
	- Test basic support for small files.
	     1/ 1 tests/filesys/base/sm-create
	     2/ 2 tests/filesys/base/sm-full
	     2/ 2 tests/filesys/base/sm-random
	     2/ 2 tests/filesys/base/sm-seq-block
	     3/ 3 tests/filesys/base/sm-seq-random

	- Test basic support for large files.
	     1/ 1 tests/filesys/base/lg-create
	     2/ 2 tests/filesys/base/lg-full
	     2/ 2 tests/filesys/base/lg-random
	     2/ 2 tests/filesys/base/lg-seq-block
	     3/ 3 tests/filesys/base/lg-seq-random

	- Test synchronized multiprogram access to files.
	     4/ 4 tests/filesys/base/syn-read
	     4/ 4 tests/filesys/base/syn-write
	     2/ 2 tests/filesys/base/syn-remove

	- Section summary.
	     13/ 13 tests passed
	     30/ 30 points subtotal


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/page-merge-mm FAILURE:

Kernel panic in run: PANIC at ../../vm/vm.c:538 in vm_free_a_page(): assertion `mmap_kpage != NULL' failed.
Call stack: 0xc002901b 0xc0030749 0xc003108c 0xc00311cd 0xc0031633 0xc0031a6e 0xc002c8fe 0xc0022e48 0xc0022f8b 0x804842e 0x8048549 0x80480ae 0x8048e64 0x8048e90
Translation of call stack:
In kernel.o:
0xc002901b: debug_panic (../../lib/kernel/debug.c:38)
0xc0030749: vm_free_a_page (../../vm/vm.c:465)
0xc003108c: vm_palloc (../../vm/vm.c:613)
0xc00311cd: vm_alloc_kpage (../../vm/vm.c:575)
0xc0031633: vm_ensure (../../vm/vm.c:720)
0xc0031a6e: vm_ensure_group_add (../../vm/vm.c:960)
0xc002c8fe: page_fault (../../userprog/exception.c:185)
0xc0022e48: intr_handler (../../threads/interrupt.c:367)
0xc0022f8b: intr_entry (threads/intr-stubs.S:38)
In tests/vm/page-merge-mm:
0x0804842e: merge (../../tests/vm/parallel-merge.c:110)
0x08048549: parallel_merge (../../tests/vm/parallel-merge.c:148)
0x080480ae: test_main (../../tests/vm/page-merge-mm.c:8)
0x08048e64: main (../../tests/main.c:13)
0x08048e90: _start (../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/vm/page-merge-mm:

Copying tests/vm/page-merge-mm to scratch partition...
Copying tests/vm/child-qsort-mm to scratch partition...
qemu -hda /dev/shm/zdQ8dlYbzs.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading...................
Kernel command line: -q -f extract run page-merge-mm
Initialized threading.
Pintos booting with 4096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  52,377,600 loops/s.
hda: 14,112 sectors (6 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 315 sectors (157 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 599 sectors (299 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
Formatting file system...done.
Initialized swapping.
Initialized user's virtual memory.
Initialized mmapping.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'page-merge-mm' into the file system...
Putting 'child-qsort-mm' into the file system...
Erasing ustar archive...
Executing 'page-merge-mm':
(page-merge-mm) begin
(page-merge-mm) init
(page-merge-mm) sort chunk 0
(page-merge-mm) sort chunk 1
(page-merge-mm) sort chunk 2
(page-merge-mm) sort chunk 3
child-qsort-mm: exit(80)
(page-merge-mm) sort chunk 4
(page-merge-mm) sort chunk 5
child-qsort-mm: exit(80)
child-qsort-mm: exit(80)
(page-merge-mm) sort chunk 6
(page-merge-mm) sort chunk 7
child-qsort-mm: exit(80)
child-qsort-mm: exit(80)
(page-merge-mm) wait for child 0
(page-merge-mm) wait for child 1
(page-merge-mm) wait for child 2
child-qsort-mm: exit(80)
(page-merge-mm) wait for child 3
(page-merge-mm) wait for child 4
(page-merge-mm) wait for child 5
child-qsort-mm: exit(80)
(page-merge-mm) wait for child 6
(page-merge-mm) wait for child 7
child-qsort-mm: exit(80)
(page-merge-mm) merge
Kernel PANIC at ../../vm/vm.c:538 in vm_free_a_page(): assertion `mmap_kpage != NULL' failed.
Call stack: 0xc002901b 0xc0030749 0xc003108c 0xc00311cd 0xc0031633 0xc0031a6e 0xc002c8fe 0xc0022e48 0xc0022f8b 0x804842e 0x8048549 0x80480ae 0x8048e64 0x8048e90.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 442 ticks
Thread: 30 idle ticks, 33 kernel ticks, 379 user ticks
hda2 (filesys): 4839 reads, 5332 writes
hda3 (scratch): 598 reads, 2 writes
hda4 (swap): 0 reads, 1024 writes
Console: 2235 characters output
Keyboard: 0 keys pressed
Exception: 635 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-write FAILURE:

run: compare read data against written data: FAILED

OUTPUT FROM tests/vm/mmap-write:

Copying tests/vm/mmap-write to scratch partition...
qemu -hda /dev/shm/913rIL1jhW.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading...................
Kernel command line: -q -f extract run mmap-write
Initialized threading.
Pintos booting with 4096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  52,377,600 loops/s.
hda: 13,104 sectors (6 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 315 sectors (157 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 285 sectors (142 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
Formatting file system...done.
Initialized swapping.
Initialized user's virtual memory.
Initialized mmapping.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'mmap-write' into the file system...
Erasing ustar archive...
Executing 'mmap-write':
(mmap-write) begin
(mmap-write) create "sample.txt"
(mmap-write) open "sample.txt"
(mmap-write) mmap "sample.txt"
(mmap-write) compare read data against written data
(mmap-write) compare read data against written data: FAILED
mmap-write: exit(1)
Execution of 'mmap-write' complete.
Timer: 63 ticks
Thread: 30 idle ticks, 31 kernel ticks, 2 user ticks
hda2 (filesys): 87 reads, 580 writes
hda3 (scratch): 284 reads, 2 writes
hda4 (swap): 0 reads, 1024 writes
Console: 1282 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-exit FAILURE:

run: 512 bytes read starting at offset 0 in "sample.txt" differ from expected: FAILED

OUTPUT FROM tests/vm/mmap-exit:

Copying tests/vm/mmap-exit to scratch partition...
Copying tests/vm/child-mm-wrt to scratch partition...
qemu -hda /dev/shm/iLaQj6YYGZ.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading...................
Kernel command line: -q -f extract run mmap-exit
Initialized threading.
Pintos booting with 4096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  52,377,600 loops/s.
hda: 14,112 sectors (6 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 315 sectors (157 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 565 sectors (282 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
Formatting file system...done.
Initialized swapping.
Initialized user's virtual memory.
Initialized mmapping.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'mmap-exit' into the file system...
Putting 'child-mm-wrt' into the file system...
Erasing ustar archive...
Executing 'mmap-exit':
(mmap-exit) begin
(child-mm-wrt) begin
(child-mm-wrt) create "sample.txt"
(child-mm-wrt) open "sample.txt"
(child-mm-wrt) mmap "sample.txt"
(child-mm-wrt) end
child-mm-wrt: exit(0)
(mmap-exit) open "sample.txt" for verification
(mmap-exit) 512 bytes read starting at offset 0 in "sample.txt" differ from expected.
(mmap-exit) Showing first differing 64 bytes.
(mmap-exit) Data actually read:
00000000  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 |................|
00000010  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 |................|
00000020  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 |................|
00000030  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 |................|
(mmap-exit) Expected data:
00000000  3d 3d 3d 20 20 41 4c 4c-20 55 53 45 52 53 20 50 |===  ALL USERS P|
00000010  4c 45 41 53 45 20 4e 4f-54 45 20 20 3d 3d 3d 3d |LEASE NOTE  ====|
00000020  3d 3d 3d 3d 3d 3d 3d 3d-3d 3d 3d 3d 3d 3d 3d 3d |================|
00000030  3d 3d 3d 3d 0a 0a 43 41-52 20 61 6e 64 20 43 44 |====..CAR and CD|
(mmap-exit) 512 bytes read starting at offset 0 in "sample.txt" differ from expected: FAILED
mmap-exit: exit(1)
Execution of 'mmap-exit' complete.
Timer: 75 ticks
Thread: 30 idle ticks, 32 kernel ticks, 13 user ticks
hda2 (filesys): 148 reads, 1142 writes
hda3 (scratch): 564 reads, 2 writes
hda4 (swap): 0 reads, 1024 writes
Console: 2229 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
